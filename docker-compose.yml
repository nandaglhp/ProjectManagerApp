services:
  redis:
    image: redis:alpine3.19
    restart: always
    volumes:
      - redisData:/data
  db:
    image: postgres:16
    restart: always
    ports:
      - $PG_PORT:$PG_PORT
    environment:
      POSTGRES_USER: $PG_USERNAME
      POSTGRES_PASSWORD: $PG_PASSWORD
      POSTGRES_DB: $PG_DATABASE
    volumes:
      - postgresData:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U $PG_USERNAME -d $PG_DATABASE
      interval: 1s
      timeout: 5s
      retries: 10
  backend:
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    build: ./backend
    restart: always
    ports:
      - $BACKEND_PORT:$BACKEND_PORT
    environment:
      REDIS_URL: $REDIS_URL
      REDIS_PASSWORD: $REDIS_PASSWORD
      DATABASE_URL: "postgresql://${PG_USERNAME}:${PG_PASSWORD}@db:${PG_PORT}/${PG_DATABASE}?schema=public"
      BACKEND_PORT: $BACKEND_PORT
      BACKEND_SESSION_SECRET: $BACKEND_SESSION_SECRET
  frontend:
    build: ./frontend
    restart: always
    ports:
      - $FRONTEND_PORT:80

volumes:
  postgresData:
  redisData:
